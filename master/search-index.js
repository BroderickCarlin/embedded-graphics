var searchIndex = {};
searchIndex["embedded_graphics"] = {"doc":"Embedded graphics","items":[[0,"drawable","embedded_graphics","`Drawable` trait and helpers",null,null],[6,"Coord","embedded_graphics::drawable","2D coordinate type",null,null],[6,"Color","","Monochrome colour type",null,null],[6,"Pixel","","A single pixel",null,null],[8,"Drawable","","Marks an object as \"drawable\". Must be implemented for all graphics objects",null,null],[0,"fonts","embedded_graphics","Pixel based fonts",null,null],[3,"Font6x8","embedded_graphics::fonts","Container struct to hold a positioned piece of text",null,null],[12,"pos","","Top left corner of the text",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"font6x8"}}],[11,"render_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"font6x8"}}],[11,"translate","","Translate the image from its current position to a new position by (x, y) pixels, returning a new `Font6x8`.",0,{"inputs":[{"name":"self"},{"name":"coord"}],"output":{"name":"self"}}],[8,"Font","","Common methods for all fonts",null,null],[10,"render_str","","Render a string in the implementing font's typeface.",1,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[0,"image","embedded_graphics","Image object",null,null],[3,"Image1BPP","embedded_graphics::image","1 bit per pixel image",null,null],[12,"offset","","Image offset in pixels from screen origin (0,0)",2,null],[3,"Image8BPP","","8 bit per pixel image",null,null],[12,"offset","","Top left corner offset from display origin (0,0)",3,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",2,null],[11,"translate","","Translate the image from its current position to a new position by (x, y) pixels, returning a new `Image1BPP`.",2,{"inputs":[{"name":"self"},{"name":"coord"}],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new 8BPP image with given data, width and height. Data length must equal `width * height`",3,null],[11,"translate","","Translate the image from its current position to a new position by (x, y) pixels, returning a new `Image8BPP`.",3,{"inputs":[{"name":"self"},{"name":"coord"}],"output":{"name":"self"}}],[8,"Image","","Image trait",null,null],[10,"new","","Create a new image with given pixel data, width and height",4,null],[0,"prelude","embedded_graphics","Prelude",null,null],[0,"primitives","","Graphics primitives",null,null],[0,"circle","embedded_graphics::primitives","The circle primitive",null,null],[3,"Circle","embedded_graphics::primitives::circle","Circle primitive",null,null],[12,"center","","Center point of circle",5,null],[12,"radius","","Radius of the circle",5,null],[12,"color","","Line colour of circle",5,null],[3,"CircleIterator","","Pixel iterator for each pixel in the circle border",null,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"circle"}}],[11,"new","","Create a new circle with center point, radius and border color",5,{"inputs":[{"name":"coord"},{"name":"u32"},{"name":"u8"}],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"circleiterator"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"translate","","Translate the circle center from its current position to a new position by (x, y) pixels, returning a new `Circle`.",5,{"inputs":[{"name":"self"},{"name":"coord"}],"output":{"name":"self"}}],[0,"line","embedded_graphics::primitives","The line primitive",null,null],[3,"Line","embedded_graphics::primitives::line","Line primitive",null,null],[12,"start","","Start point",7,null],[12,"end","","End point",7,null],[12,"color","","Line color",7,null],[3,"LineIterator","","Pixel iterator for each pixel in the line",null,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"line"}}],[11,"new","","Create a new line",7,{"inputs":[{"name":"coord"},{"name":"coord"},{"name":"u8"}],"output":{"name":"self"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"translate","","Translate the line from its current position to a new position by (x, y) pixels, returning a new `Line`.",7,{"inputs":[{"name":"self"},{"name":"coord"}],"output":{"name":"self"}}],[0,"rect","embedded_graphics::primitives","The rectangle primitive. Also good for drawing squares.",null,null],[3,"Rect","embedded_graphics::primitives::rect","Rectangle primitive",null,null],[12,"top_left","","Top left point of the rect",9,null],[12,"bottom_right","","Bottom right point of the rect",9,null],[12,"color","","Border color",9,null],[3,"RectIterator","","Pixel iterator for each pixel in the rect border",null,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"rect"}}],[11,"new","","Create a new rectangle from the top left point to the bottom right point with a given border color",9,{"inputs":[{"name":"coord"},{"name":"coord"},{"name":"u8"}],"output":{"name":"self"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"rectiterator"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"translate","","Translate the rect from its current position to a new position by (x, y) pixels, returning a new `Rect`.",9,{"inputs":[{"name":"self"},{"name":"coord"}],"output":{"name":"self"}}],[0,"transform","embedded_graphics","Transformations for graphics objects",null,null],[8,"Transform","embedded_graphics::transform","Transform operations",null,null],[10,"translate","","Move the origin of an object by a given number of (x, y) pixels",11,{"inputs":[{"name":"self"},{"name":"coord"}],"output":{"name":"self"}}],[8,"Drawing","embedded_graphics","The main trait of this crate. All graphics objects must implement it.",null,null],[10,"draw","","Draw an object from an iterator over its pixels",12,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}]],"paths":[[3,"Font6x8"],[8,"Font"],[3,"Image1BPP"],[3,"Image8BPP"],[8,"Image"],[3,"Circle"],[3,"CircleIterator"],[3,"Line"],[3,"LineIterator"],[3,"Rect"],[3,"RectIterator"],[8,"Transform"],[8,"Drawing"]]};
initSearch(searchIndex);
